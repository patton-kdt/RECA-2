---
- hosts: localhost
  vars:
    ansible_python_interpreter: /bin/python3
    gather_facts: no
    project_id: "PRT-00"                    ## <-- 개인별 프로젝트 ID값 사용 
    vcenter_hostname: "192.168.3.10"
    vcenter_username: "s00@vclass.reca2"    ## <-- 개인별 vSphere 계정 사용 
    vcenter_password: "VMware1!"
    datacenter_name: "Datacenter"
    esxi_hostname: "esxi-05.vclass.reca2"  ## <-- 개인별 실습 물리서버 사용 
    esxi_username: "root"
    esxi_password: "VMware1!"
    public_net:  "VM-192.168.3.x"
    private_net: "{{ project_id + '-Openshift' }}"
    parent_folder: "4.Projects"
    folder_prefix: "/Datacenter/vm/4.Projects/"
    datastore_name: "ESXi-05"              ## <-- 개인별 실습 서버의 저장소 

  tasks: 
  - name: 01. Create a Project folder
    community.vmware.vcenter_folder:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: false
      datacenter_name: '{{ datacenter_name }}'
      folder_name: '{{ project_id }}'
      parent_folder: '{{ parent_folder }}'
      state: present
    register: sub_folder_creation_result
    delegate_to: localhost

  - name: 02. Create Project Standard vSwitch
    community.vmware.vmware_vswitch:
      hostname: '{{ esxi_hostname }}'
      username: '{{ esxi_username }}'
      password: '{{ esxi_password }}'
      validate_certs: false
      switch: '{{ project_id }}'
    delegate_to: localhost

  - name: waiting vswitch creating
    wait_for:
      timeout: 10
    delegate_to: localhost

  - name: 03. Adding Private Openshift Portgroup
    community.vmware.vmware_portgroup:
      validate_certs: false
      hostname: "{{ esxi_hostname }}"
      username: "{{ esxi_username }}"
      password: "{{ esxi_password }}"
      hosts: "{{ esxi_hostname }}"
      switch: "{{ project_id }}"
      portgroup: "{{ private_net }}"
    delegate_to: localhost

  - name: waiting portgroup creating
    wait_for:
      timeout: 5
    delegate_to: localhost

  - name: 04. Create a Router VM with ISO file mount    ## Diskless의 Livecd를 이용해서 Router를 사용하는 시나리오 
    community.vmware.vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: 'false'
      datacenter: '{{datacenter_name}}'
      folder: '{{ folder_prefix + project_id }}'
      name: "{{ project_id + '-Router' }}"
      esxi_hostname: "{{ esxi_hostname }}"
      datastore: '{{ datastore_name }}'
      guest_id: "otherLinux64Guest"
      hardware:
        num_cpus: "1"
        memory_mb: "1024"
        scsi: paravirtual
      networks:
      - name: '{{ public_net }}'
        device_type: vmxnet3
      - name: '{{ private_net }}'
        device_type: vmxnet3
      cdrom:
      - controller_number: 0
        unit_number: 0
        state: present
        type: iso
        iso_path: '[ESXi-05]\ISO\vyos-rolling-latest.iso'
      state: poweredon
    delegate_to: localhost
    register: deploy_vm

  - name: waiting Router booting
    wait_for:
      timeout: 120
    delegate_to: localhost

  - name: 05. VyOS Router Configuration
    community.vmware.vmware_vm_shell:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: 'false'
      datacenter: '{{ datacenter_name }}'
      folder: '{{ folder_prefix + project_id }}'
      vm_id: "{{ project_id + '-Router' }}"
      vm_id_type: vm_name
      vm_username: 'vyos'
      vm_password: 'vyos'
      vm_shell: /bin/vbash
      vm_shell_cwd: "/tmp"
      vm_shell_args: |-
        -c "source /opt/vyatta/etc/functions/script-template
        configure
        set system login user admin full-name Admin_User
        set system login user admin authentication plaintext-password VMware1!
        set service ssh port 22
        set system ipv6 disable
        set interfaces ethernet eth0 address dhcp
        set interfaces ethernet eth0 description Outside
        set interfaces ethernet eth0 ipv6 address no-default-link-local
        set protocols static route 0.0.0.0/0 next-hop 192.168.3.1
        set interfaces ethernet eth1 description 'Openshift Network'
        set interfaces ethernet eth1 address 10.10.10.1/24
        set interfaces ethernet eth0 ipv6 address no-default-link-local
        set system name-server 192.168.3.3
        set service ntp server kr.pool.ntp.org
        set nat source rule 10 outbound-interface eth0
        set nat source rule 10 source address 10.10.10.0/24
        set nat source rule 10 translation address masquerade
        set service dhcp-server shared-network-name Openshift subnet 10.10.10.0/24 default-router '10.10.10.1'
        set service dhcp-server shared-network-name Openshift subnet 10.10.10.0/24 name-server '10.10.10.2'
        set service dhcp-server shared-network-name Openshift subnet 10.10.10.0/24 domain-name 'vclass.local'
        set service dhcp-server shared-network-name Openshift subnet 10.10.10.0/24 range 0 start '10.10.10.100'
        set service dhcp-server shared-network-name Openshift subnet 10.10.10.0/24 range 0 stop '10.10.10.200'
        commit
        save"
      wait_for_process: True
      timeout: 180
    delegate_to: localhost
    register: shell_command_with_wait_timeout

